---
# - name: set hostname
#   command: hostnamectl --static set-hostname {{ inventory_hostname }}


- name: install packages via yum
  dnf: name={{ item }} state=latest
  when: "ansible_distribution in ['Fedora']"
  with_items:
    - postfix
  tags:
    - postfix
    - yum

- name: install additional packages via yum
  dnf: name={{ item }} state=latest
  when: "ansible_distribution in ['Fedora'] and (ansible_distribution_version | int) >= 23"
  with_items:
  - postfix-ldap
  tags:
  - postfix
  - yum

- name: install packages via apt
  apt: name={{ item }} state=latest
  when: "ansible_distribution in ['Ubuntu', 'Debian']"
  with_items:
    - postfix
    - postfix-ldap
  tags:
    - postfix
    - apt

- name: install spampd (redhat)
  dnf: name={{ item }} state=latest
  when: mta_spampd and ansible_os_family == "RedHat"
  with_items:
  - spampd
  tags:
  - postfix
  - yum

- name: install spampd (debian)
  apt: name={{ item }} state=latest
  when: mta_spampd and ansible_os_family == "Debian"
  with_items:
  - spampd
  tags:
  - postfix
  - yum

- name: instanciate config files
  template: dest=/etc/postfix/{{ item }} src=postfix/{{ item }}
  with_items:
    - master.cf
    - main.cf
  tags:
    - postfix
  notify:
    - reload postfix

- name: update alias tables
  template: src=postfix/aliases
            dest={{ item.file }}
            mode="{{ item.mode | default('ug=rw,o=r') }}"
            owner={{ item.owner | default("root") }}
            group={{ item.group | default("root") }}
  with_items: mta_alias_maps
  tags:
    - postfix
    - postfix_virtual_map
  register: alias_map_update

- name: compile alias tables
  command: postalias {{ item.item.file }}
  when: item | changed
  with_items: alias_map_update.results | default([])
  notify:
    - reload postfix
  tags:
    - postfix
    - postfix_virtual_map

- name: update virtual tables
  template: src=postfix/virtual dest=/etc/postfix/virtual_hash_{{ item.domain }}
  when: item is mapping and (item.type | default("hash")) == "hash"
  with_items: mta_virtual_maps
  tags:
    - postfix
    - postfix_virtual_map
  register: virtual_map_update

- name: compile virtual tables
  command: postmap /etc/postfix/virtual_hash_{{ item.item.domain }}
  when: item | changed
  with_items: virtual_map_update.results | default([])
  notify:
    - reload postfix
  tags:
    - postfix
    - postfix_virtual_map

- name: update ldap configurations
  template: src=postfix/ldap dest=/etc/postfix/virtual_ldap_{{ item.name }}
  when: item is mapping and (item.type | default("hash")) == "ldap"
  with_items: mta_virtual_maps
  tags:
    - postfix
    - postfix_virtual_map

- name: update transport map
  template: src=postfix/transport_map dest=/etc/postfix/transports
  when: mta_transport_map is mapping
  tags:
    - postfix
    - postfix_transport_map
  register: postfix_transport_map

- name: compile transport map
  command: postmap /etc/postfix/transports
  when: postfix_transport_map | changed
  tags:
    - postfix
    - postfix_transport_map

- name: deploy sasl password map for relaying
  template: src=postfix/password_map
            dest="{{ mta_relayhost_auth.mapfile }}"
  when: mta_relayhost and mta_relayhost_auth
  register: password_map
  notify:
    - reload postfix
  tags:
    - postfix

- name: compile sasl password map for relaying
  command: postmap "{{ mta_relayhost_auth.mapfile }}"
  when: password_map | changed
  notify:
    - reload postfix
  tags:
    - postfix

- name: upload certificate
  copy: content="{{ mta_tls_cert }}"
        dest=/etc/postfix/mta.crt
        owner=root
        group=root
        mode=ugo=r
  when: mta_listen and mta_tls
  notify:
  - reload postfix
  tags:
  - postfix
  - certificate

- name: upload key
  copy: content="{{ mta_tls_key }}"
        dest=/etc/postfix/mta.key
        owner=root
        group=root
        mode=u=r,go-rwx
  when: mta_listen and mta_tls
  notify:
  - reload postfix
  tags:
  - postfix
  - certificate
  - requires-secret

- name: configure spampd (redhat)
  template: src=spampd-fedora.j2
            dest=/etc/sysconfig/spampd
  when: mta_spampd and ansible_os_family == "RedHat"
  tags:
  - postfix
  notify:
  - restart spampd

- name: configure spampd (debian)
  template: src=spampd-debian.j2
            dest=/etc/default/spampd
  when: mta_spampd and ansible_os_family == "Debian"
  tags:
  - postfix
  notify:
  - restart spampd

- name: enable and start spampd
  service: name=spampd state=started enabled=yes
  tags:
  - postfix

- include: postfix-ferm.yml
  when: ferm
  tags:
  - ferm
  - postfix

- name: start and enable postfix
  service: name=postfix state=started enabled=yes
  tags:
    - postfix

- name: upload collectd scripts
  copy:
    src: queuesize.sh
    dest: /usr/local/bin/
    mode: ugo=rx
  tags:
  - postfix
